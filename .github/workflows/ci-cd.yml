name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: List target directory
        run: ls -la target/

      - name: Check if JAR exists
        run: |
          if [ -f "target/slack.cab-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file exists"
          else
            echo "JAR file not found"
            exit 1
          fi

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/slack.cab-0.0.1-SNAPSHOT.jar

  deploy:
    name: Deploy to ${{ matrix.env }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, sit, stg, prod]
        include:
          - env: dev
            port: 8080
            needs: build
          - env: sit
            port: 8081
            needs: deploy_dev
          - env: stg
            port: 8082
            needs: deploy_sit
            environment: stg
          - env: prod
            port: 8083
            needs: deploy_stg
            environment: prod
    environment: ${{ matrix.environment }}
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/slack.cab-0.0.1-SNAPSHOT.jar

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Create deployment directory
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /home/${{ secrets.SERVER_USER }}/deployment/${{ matrix.env }}"

      - name: Check directory permissions
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "ls -la /home/${{ secrets.SERVER_USER }}/deployment/ | grep ${{ matrix.env }}"

      - name: Copy JAR to server
        run: scp target/slack.cab-0.0.1-SNAPSHOT.jar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/deployment/${{ matrix.env }}/

      - name: Restart application on server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            pkill -f "slack.cab-0.0.1-SNAPSHOT.jar.*${{ matrix.port }}" || true
            cd /home/${{ secrets.SERVER_USER }}/deployment/${{ matrix.env }}
            nohup java -jar slack.cab-0.0.1-SNAPSHOT.jar --server.port=${{ matrix.port }} > app.log 2>&1 &
            echo "${{ matrix.env }} application restarted on port ${{ matrix.port }}"
          EOF